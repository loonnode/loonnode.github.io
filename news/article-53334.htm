<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://loonnode.github.io/news/article-53334.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>Go 语言入门之Go 计时器介绍_Golang</title>
        <meta name="description" content="目录  引言 Go 的计时器 Ticker 计时器是如何工作的？ Ticker 使用方式 总结    引言 一般来说，很多时候我们面临这样一种情况，即我们需要运行时间记录器，它不断向我们显示当前时间或" />
        <link rel="icon" href="/assets/website/img/loonnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Loon Node机场订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://loonnode.github.io/news/article-53334.htm" />
    <meta property="og:site_name" content="Loon Node机场订阅官网" />
    <meta property="og:title" content="Go 语言入门之Go 计时器介绍_Golang" />
    <meta property="og:image" content="https://loonnode.github.io/uploads/20240719/ad89994a31f69f723e44cb1ca2c0851b.webp" />
        <meta property="og:release_date" content="2025-02-08T04:41:44" />
    <meta property="og:updated_time" content="2025-02-08T04:41:44" />
        <meta property="og:description" content="目录  引言 Go 的计时器 Ticker 计时器是如何工作的？ Ticker 使用方式 总结    引言 一般来说，很多时候我们面临这样一种情况，即我们需要运行时间记录器，它不断向我们显示当前时间或" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Go 语言入门之Go 计时器介绍_Golang">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
        
    <!-- Bootstrap -->
    <link href="/assets/website/css/loonnode/bootstrap.min.css" rel="stylesheet">
    <!-- Style CSS -->
    <link href="/assets/website/css/loonnode/style.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Montserrat:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i%7cNoto+Serif:400,400i,700,700i" rel="stylesheet">
    <!-- FontAwesome CSS -->
    <link href="/assets/website/js/frontend/loonnode/web-fonts-with-css/css/fontawesome-all.css" rel="stylesheet">
    <!-- OwlCarosuel CSS -->
    <link href="/assets/website/css/loonnode/owl.carousel.css" type="text/css" rel="stylesheet">
    <link href="/assets/website/css/loonnode/owl.theme.default.css" type="text/css" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/css/loonnode/aos.css">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-2X9J5FVHVS"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-2X9J5FVHVS');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- header-section-->
    <div class="header-wrapper">
        <div class="container-fluid">
            <div class="row">
                <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">
                <div class="logo">
                    <a href="/">
                                        <span>Loon Node</span>
                                        </a>
                </div>
                </div>
                <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12">
                    <!-- navigations-->
                    <div class="navigation">
                        <div id="navigation">
                            <ul>
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                <li><a href="/client.htm">客户端</a></li>
                                                                <li><a href="/news/">新闻资讯</a></li>
                                                            </ul>
                        </div>
                    </div>
                    <!-- /.navigations-->
                </div>
            </div>
        </div>
    </div>
    <!-- /. header-section-->
    <!-- page-header -->
    <div class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
                    <div data-aos="fade-up" class="page-caption">
                        <h1 class="page-title">Go 语言入门之Go 计时器介绍_Golang</h1>
                        <div class="nav-box">
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.page-header-->
    <!-- attorney-section -->
    <div class="space-medium bg-light">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="navCategory"> <h5 class="catalogue">目录</h5> <ul class="first_class_ul"> <li><a href="#_label0" rel="nofollow">引言</a></li> <li><a href="#_label1" rel="nofollow">Go 的计时器</a></li> <li><a href="#_label2" rel="nofollow">Ticker 计时器是如何工作的？</a></li> <li><a href="#_label3" rel="nofollow">Ticker 使用方式</a></li> <li><a href="#_label4" rel="nofollow">总结</a></li> </ul> </div> <p class="maodian"><a name="_label0" rel="nofollow"></a></p> <h2>引言</h2> <p>一般来说，很多时候我们面临这样一种情况，即我们需要运行时间记录器，它不断向我们显示当前时间或在给定的时间间隔内保持执行一定的代码和平，在这种情况下，我们应该使用 ​<code>​Ticker​</code>​​，使用这个我们需要使用 go 语言的 ​<code>​time​</code>​​ 包，我们有一个名为 ​<code>​NewTicker()​</code>​​ 的方法，它允许我们停止和启动时间代码，我们需要通过传递 ​<code>​chan​</code>​​ 和 ​<code>​bool​</code>​ 作为将使用的参数来创建一个代码通道检查它是否打开，如果通道打开意味着计时器将继续。</p> <p class="maodian"><a name="_label1" rel="nofollow"></a></p> <h2>Go 的计时器</h2> <p><strong>Go 提供了非常简单的语法来实现一个计时器，定时器的结构体定义：</strong></p> <div class="ay1code"> <pre class="brush:go;">type Ticker struct {  C &lt;-chan Time // 抛出来的channel，给上层系统使用，实现计时  r runtimeTimer // 给系统管理使用的定时器，系统通过该字段确定定时器是否到时，如果到时，调用对应的函数向C中推送当前时间。  }</pre> </div> <p>Ticker对外仅暴露一个 <strong>channel</strong>，指定的时间到来时就往该 channel 中写入系统时间，也即一个事件。</p> <p><strong>Ticker 的使用方式也很简单，代码如下：</strong></p> <div class="ay1code"> <pre class="brush:go;">import time  TimeTicker := time.NewTicker(1 * time.Second)  TimeTicker.Stop()</pre> </div> <ul> <li>​<code>​time​</code>​​ : 如果想要使用​<code>​time​</code>​ 中的计时器，那么需要将其导入代码中</li> <li>​<code>​NewTicker()​</code>​​ 函数：这个很好理解，新建一个计时器，然后该计时器以时间表达式作为参数，比如一秒​<code>​1*time.Second​</code>​​ ，而不是直接传入​<code>​1​</code>​​ ，也可以传入其他时间方式，比如​<code>​2*time.Millisecond​</code>​</li> <li>最后，我们可以使用时间表达式调用由​<code>​NewTicker​</code>​​ 函数创建的变量上的任何活动。例如，在上面的语法中，我们使用了​<code>​TimeTicker.Stop()​</code>​​ 来停止时间计时器。我们可以在特定条件下使用它，比如定义倒数 10 秒的计时器，就可以检查时间是否满足 10 秒，一旦 10 秒发生，我们可以调用​<code>​TimeTicker.stop()​</code>​。</li> </ul> <p><strong>我们可以每隔一秒输出一个结果，比如实现一个倒数 10 个数的功能：</strong></p> <div class="ay1code"> <pre class="brush:go;">package main  import (  "fmt"  "time"  )  func main() {  TimeTicker := time.NewTicker(1 * time.Second)  i := 10  for {  &lt;-TimeTicker.C  fmt.Println("i = ", i)  i--  if i == 0 {  TimeTicker.Stop()  break  }  }  }</pre> </div> <p><strong>然后执行该程序：</strong></p> <blockquote> <p>$ go run main.go<br />i = 10<br />i = 9<br />i = 8<br />i = 7<br />i = 6<br />i = 5<br />i = 4<br />i = 3<br />i = 2<br />i = 1</p> </blockquote> <p class="maodian"><a name="_label2" rel="nofollow"></a></p> <h2>Ticker 计时器是如何工作的？</h2> <p>​<code>​NewTicker​</code>​​创建的计时器与​<code>​NewTimer​</code>​​创建的计时器持有的时间​<code>​channel​</code>​​一样都是带一个缓存的​<code>​channel​</code>​​，每次触发后执行的函数也是​<code>​sendTime​</code>​​，这样即保证了无论有误接收方​<code>​Ticker​</code>​触发时间事件时都不会阻塞：</p> <div class="ay1code"> <pre class="brush:go;">func NewTicker(d Duration) *Ticker {  if d &lt;= 0 {  panic(errors.New("non-positive interval for NewTicker"))  }  // Give the channel a 1-element time buffer.  // If the client falls behind while reading, we drop ticks  // on the floor until the client catches up.  c := make(chan Time, 1)  t := &amp;Ticker{  C: c,  r: runtimeTimer{  when: when(d),  period: int64(d),  f: sendTime,  arg: c,  },  }  startTimer(&amp;t.r)  return t  }</pre> </div> <p>NewTicker()只是构造了一个Ticker，然后把Ticker.r通过startTimer()交给系统协程维护。</p> <p>其中<code>period</code>为事件触发的周期。</p> <p>其中​<code>​sendTime()​</code>​方法便是定时器触发时的动作：</p> <div class="ay1code"> <pre class="brush:go;">func sendTime(c interface{}, seq uintptr) {  select {  case c.(chan Time) &lt;- Now():  default:  }  }</pre> </div> <p>​<code>​sendTime​</code>​ 接收一个管道作为参数，其主要任务是向管道中写入当前时间。</p> <p><strong>停止Ticker</strong>:</p> <p>停止<code>Ticker</code>，只是简单的把Ticker从系统协程中移除。</p> <p><strong>函数主要实现如下：</strong></p> <div class="ay1code"> <pre class="brush:go;">func (t *Ticker) Stop() {  stopTimer(&amp;t.r)  }</pre> </div> <p>​<code>​stopTicker()​</code>​ 即通知系统协程把该 Ticker 移除，即不再监控。系统协程只是移除 Ticker 并不会关闭管道，以避免用户协程读取错误。</p> <p class="maodian"><a name="_label3" rel="nofollow"></a></p> <h2>Ticker 使用方式</h2> <p><strong>例子一：</strong></p> <div class="ay1code"> <pre class="brush:go;">package main  import (  "fmt"  "time"  )  func main() {  TimeTicker := time.NewTicker(3 * time.Second)  tickerChannel := make(chan bool)  go func() {  for {  select {  case timeticker := &lt;-TimeTicker.C:  fmt.Println("The time for current is : ", timeticker)  case &lt;-tickerChannel:  return  }  }  }()  time.Sleep(6 * time.Second)  TimeTicker.Stop()  tickerChannel &lt;- true  fmt.Println("Time for running ticker is completed")  }</pre> </div> <p><strong>运行该代码：</strong></p> <blockquote> <p>$ go run main.go<br />The time for current is : 2022-04-29 22:37:13.93862 +0800 CST m=+3.000267823<br />The time for current is : 2022-04-29 22:37:16.939081 +0800 CST m=+6.000707515<br />Time for running ticker is completed</p> </blockquote> <p><strong>例子二：</strong></p> <div class="ay1code"> <pre class="brush:go;">package main  import (  "fmt"  "time"  )  func main() {  tm := time.Millisecond  tickerTicker := time.NewTicker(400 * tm)  tickerChaneel := make(chan bool)  go func() {  for {  select {  case &lt;-tickerChaneel:  return  case tmtr := &lt;-tickerTicker.C:  fmt.Println("Ticker time at current is", tmtr)  }  }  }()  time.Sleep(1400 * time.Millisecond)  tickerTicker.Stop()  tickerChaneel &lt;- true  fmt.Println("Ticker has stopped now")  }</pre> </div> <p><strong>运行该代码：</strong></p> <blockquote> <p>$ go run main.go<br />Ticker time at current is 2022-04-29 22:39:51.13057 +0800 CST m=+0.400159916<br />Ticker time at current is 2022-04-29 22:39:51.531516 +0800 CST m=+0.801102997<br />Ticker time at current is 2022-04-29 22:39:51.931238 +0800 CST m=+1.200822301<br />Ticker has stopped now</p> </blockquote> <p class="maodian"><a name="_label4" rel="nofollow"></a></p> <h2>总结</h2> <p>本文简单了解了 go 计时器 ​<code>​Ticker​</code>​​ 的基本概念，介绍了它的工作原理，并且我们专注于 go 语言中 ​<code>​ticker​</code>​ 的语法和使用。最后展现了 go 语言中的一些重要示例。</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-53332.htm">vue 项目安装 node-sass 失败报错的解决办法 附nvm使用方法</a></p>
                                        <p>下一个：<a href="/news/article-53883.htm">宠物领养证办理需要什么条件呢图片大全（宠物领养证办理需要什么条件呢图片大全）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-31410.htm" title="狗粮品牌排行 狗粮品牌排行榜">狗粮品牌排行 狗粮品牌排行榜</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-7-loon-github.htm" title="「12月7日」最高速度19.5M/S，2024年Loon每天更新免费节点订阅链接">「12月7日」最高速度19.5M/S，2024年Loon每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-42701.htm" title="附近有没有养狗的（离我家最近的养狗场）">附近有没有养狗的（离我家最近的养狗场）</a></li>
                        <li class="py-2"><a href="/news/article-46183.htm" title="卖宠物粮需要懂什么知识 卖宠物粮需要懂什么知识呢">卖宠物粮需要懂什么知识 卖宠物粮需要懂什么知识呢</a></li>
                        <li class="py-2"><a href="/news/article-31992.htm" title="南京领养宠物的地方在哪里啊多少钱（南京领养宠物的地方在哪里啊多少钱一个月）">南京领养宠物的地方在哪里啊多少钱（南京领养宠物的地方在哪里啊多少钱一个月）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-1-node-share-links.htm" title="「2月1日」每天更新21.4M/S，V2ray/Clash/Shadowrocket/SSR/Loon免费节点订阅链接">「2月1日」每天更新21.4M/S，V2ray/Clash/Shadowrocket/SSR/Loon免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-44169.htm" title="长春好的宠物医院（长春哪个宠物医院好）">长春好的宠物医院（长春哪个宠物医院好）</a></li>
                        <li class="py-2"><a href="/news/article-34383.htm" title="宠物粮品牌起名字大全四个字开头（宠物粮食品牌起名大全）">宠物粮品牌起名字大全四个字开头（宠物粮食品牌起名大全）</a></li>
                        <li class="py-2"><a href="/news/article-31043.htm" title="兽用疫苗稀释液的说明书怎么写（兽用疫苗专用稀释液成分）">兽用疫苗稀释液的说明书怎么写（兽用疫苗专用稀释液成分）</a></li>
                        <li class="py-2"><a href="/news/article-48143.htm" title="动物疫苗新法案例分析题及答案 动物疫苗新法案例分析题及答案解析">动物疫苗新法案例分析题及答案 动物疫苗新法案例分析题及答案解析</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">33</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
    <!-- attorney-section -->
        <!-- footer -->
    <div class="footer">
        <div class="tiny-footer">
            <div class="container">
                <div class="row ">
                    <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center ">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        <p>
                            <a href="/">Loon Node机场订阅官网</a> 版权所有 Powered by WordPress
                        </p>
                    </div>
                </div>
                <!-- /. tiny-footer -->
            </div>
        </div>
    </div>
    <!-- /.footer -->
    <a href="javascript:" id="return-to-top"><i class="fa fa-angle-up"></i></a>
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="/assets/website/js/frontend/loonnode/jquery.min.js"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="/assets/website/js/frontend/loonnode/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/loonnode/menumaker.js"></script>
    <script src="/assets/website/js/frontend/loonnode/return-to-top.js"></script>
    <script src="/assets/website/js/frontend/loonnode/sticky-header.js"></script>
    <script src="/assets/website/js/frontend/loonnode/jquery.sticky.js"></script>
    <script src="/assets/website/js/frontend/loonnode/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/loonnode/multiple-carousel.js"></script>
    <script src="/assets/website/js/frontend/loonnode/aos.js"></script>
    <script>
    AOS.init({
        easing: 'linear',
        duration: 800,
    });
    </script>
    <script>
    AOS.init({
        disable: 'mobile'
    });
    </script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>