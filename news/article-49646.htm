<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://loonnode.github.io/news/article-49646.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>ssm框架整合</title>
        <meta name="description" content="目录 1.导入依赖 2.创建实体类 3.写dao层接口 4.写mybatis核心配置文件和接口配置文件 5.用spring整合Mybatis层也就是Dao层 6.spring整合Service层 7." />
        <link rel="icon" href="/assets/website/img/loonnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Loon Node机场订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://loonnode.github.io/news/article-49646.htm" />
    <meta property="og:site_name" content="Loon Node机场订阅官网" />
    <meta property="og:title" content="ssm框架整合" />
    <meta property="og:image" content="https://loonnode.github.io/uploads/20240719/dfebda48d53f4d78aa60a492369bf84c.webp" />
        <meta property="og:release_date" content="2025-02-01T07:15:24" />
    <meta property="og:updated_time" content="2025-02-01T07:15:24" />
        <meta property="og:description" content="目录 1.导入依赖 2.创建实体类 3.写dao层接口 4.写mybatis核心配置文件和接口配置文件 5.用spring整合Mybatis层也就是Dao层 6.spring整合Service层 7." />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="ssm框架整合">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
        
    <!-- Bootstrap -->
    <link href="/assets/website/css/loonnode/bootstrap.min.css" rel="stylesheet">
    <!-- Style CSS -->
    <link href="/assets/website/css/loonnode/style.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Montserrat:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i%7cNoto+Serif:400,400i,700,700i" rel="stylesheet">
    <!-- FontAwesome CSS -->
    <link href="/assets/website/js/frontend/loonnode/web-fonts-with-css/css/fontawesome-all.css" rel="stylesheet">
    <!-- OwlCarosuel CSS -->
    <link href="/assets/website/css/loonnode/owl.carousel.css" type="text/css" rel="stylesheet">
    <link href="/assets/website/css/loonnode/owl.theme.default.css" type="text/css" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/css/loonnode/aos.css">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-2X9J5FVHVS"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-2X9J5FVHVS');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- header-section-->
    <div class="header-wrapper">
        <div class="container-fluid">
            <div class="row">
                <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">
                <div class="logo">
                    <a href="/">
                                        <span>Loon Node</span>
                                        </a>
                </div>
                </div>
                <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12">
                    <!-- navigations-->
                    <div class="navigation">
                        <div id="navigation">
                            <ul>
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                <li><a href="/client.htm">客户端</a></li>
                                                                <li><a href="/news/">新闻资讯</a></li>
                                                            </ul>
                        </div>
                    </div>
                    <!-- /.navigations-->
                </div>
            </div>
        </div>
    </div>
    <!-- /. header-section-->
    <!-- page-header -->
    <div class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
                    <div data-aos="fade-up" class="page-caption">
                        <h1 class="page-title">ssm框架整合</h1>
                        <div class="nav-box">
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.page-header-->
    <!-- attorney-section -->
    <div class="space-medium bg-light">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="htmledit_views"> <p id="main-toc"><strong>目录</strong></p> <p id="1.%E5%AF%BC%E5%85%A5%E4%BE%9D%E8%B5%96-toc" style="margin-left:0px;"><a href="#1.%E5%AF%BC%E5%85%A5%E4%BE%9D%E8%B5%96" rel="nofollow">1.导入依赖</a></p> <p id="2.%E5%88%9B%E5%BB%BA%E5%AE%9E%E4%BD%93%E7%B1%BB-toc" style="margin-left:0px;"><a href="#2.%E5%88%9B%E5%BB%BA%E5%AE%9E%E4%BD%93%E7%B1%BB" rel="nofollow">2.创建实体类</a></p> <p id="3.%E5%86%99dao%E5%B1%82%E6%8E%A5%E5%8F%A3-toc" style="margin-left:0px;"><a href="#3.%E5%86%99dao%E5%B1%82%E6%8E%A5%E5%8F%A3" rel="nofollow">3.写dao层接口</a></p> <p id="4.%E5%86%99mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%92%8C%E6%8E%A5%E5%8F%A3%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-toc" style="margin-left:0px;"><a href="#4.%E5%86%99mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%92%8C%E6%8E%A5%E5%8F%A3%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6" rel="nofollow">4.写mybatis核心配置文件和接口配置文件</a></p> <p id="5.%E7%94%A8spring%E6%95%B4%E5%90%88Mybatis%E5%B1%82%E4%B9%9F%E5%B0%B1%E6%98%AFDao%E5%B1%82-toc" style="margin-left:0px;"><a href="#5.%E7%94%A8spring%E6%95%B4%E5%90%88Mybatis%E5%B1%82%E4%B9%9F%E5%B0%B1%E6%98%AFDao%E5%B1%82" rel="nofollow">5.用spring整合Mybatis层也就是Dao层</a></p> <p id="6.spring%E6%95%B4%E5%90%88Service%E5%B1%82-toc" style="margin-left:0px;"><a href="#6.spring%E6%95%B4%E5%90%88Service%E5%B1%82" rel="nofollow">6.spring整合Service层</a></p> <p id="8.%E6%B7%BB%E5%8A%A0web%E6%94%AF%E6%8C%81-toc" style="margin-left:0px;"><a href="#8.%E6%B7%BB%E5%8A%A0web%E6%94%AF%E6%8C%81" rel="nofollow">7.添加web支持</a></p> <p id="8.%E5%AE%8C%E6%95%B4%E7%9A%84%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84-toc" style="margin-left:0px;"><a href="#8.%E5%AE%8C%E6%95%B4%E7%9A%84%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84" rel="nofollow">8.完整的目录结构</a></p> <hr id="hr-toc"/> <p style="margin-left:0px;"> </h1> <pre><code class="language-XML">   &lt;dependency&gt;         &lt;groupId&gt;junit&lt;/groupId&gt;         &lt;artifactId&gt;junit&lt;/artifactId&gt;         &lt;version&gt;4.12&lt;/version&gt;     &lt;/dependency&gt;     &lt;!--数据库驱动--&gt;     &lt;dependency&gt;         &lt;groupId&gt;mysql&lt;/groupId&gt;         &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;         &lt;version&gt;5.1.47&lt;/version&gt;     &lt;/dependency&gt;     &lt;!-- 数据库连接池 --&gt;     &lt;dependency&gt;         &lt;groupId&gt;com.mchange&lt;/groupId&gt;         &lt;artifactId&gt;c3p0&lt;/artifactId&gt;         &lt;version&gt;0.9.5.2&lt;/version&gt;     &lt;/dependency&gt;      &lt;!--Servlet - JSP --&gt;     &lt;dependency&gt;         &lt;groupId&gt;javax.servlet&lt;/groupId&gt;         &lt;artifactId&gt;servlet-api&lt;/artifactId&gt;         &lt;version&gt;2.5&lt;/version&gt;     &lt;/dependency&gt;     &lt;dependency&gt;         &lt;groupId&gt;javax.servlet.jsp&lt;/groupId&gt;         &lt;artifactId&gt;jsp-api&lt;/artifactId&gt;         &lt;version&gt;2.2&lt;/version&gt;     &lt;/dependency&gt;     &lt;dependency&gt;         &lt;groupId&gt;javax.servlet&lt;/groupId&gt;         &lt;artifactId&gt;jstl&lt;/artifactId&gt;         &lt;version&gt;1.2&lt;/version&gt;     &lt;/dependency&gt;      &lt;!--Mybatis--&gt;     &lt;dependency&gt;         &lt;groupId&gt;org.mybatis&lt;/groupId&gt;         &lt;artifactId&gt;mybatis&lt;/artifactId&gt;         &lt;version&gt;3.5.2&lt;/version&gt;     &lt;/dependency&gt;     &lt;dependency&gt;         &lt;groupId&gt;org.mybatis&lt;/groupId&gt;         &lt;artifactId&gt;mybatis-spring&lt;/artifactId&gt;         &lt;version&gt;2.0.2&lt;/version&gt;     &lt;/dependency&gt;      &lt;!--Spring--&gt;     &lt;dependency&gt;         &lt;groupId&gt;org.springframework&lt;/groupId&gt;         &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;         &lt;version&gt;5.1.9.RELEASE&lt;/version&gt;     &lt;/dependency&gt;     &lt;!--spring jdbc--&gt;     &lt;dependency&gt;         &lt;groupId&gt;org.springframework&lt;/groupId&gt;         &lt;artifactId&gt;spring-jdbc&lt;/artifactId&gt;         &lt;version&gt;5.1.9.RELEASE&lt;/version&gt;     &lt;/dependency&gt;      &lt;!-- spring的核心依赖 --&gt;     &lt;dependency&gt;         &lt;groupId&gt;org.springframework&lt;/groupId&gt;         &lt;artifactId&gt;spring-context&lt;/artifactId&gt;         &lt;version&gt;5.1.9.RELEASE&lt;/version&gt;     &lt;/dependency&gt;      &lt;dependency&gt;         &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;         &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;         &lt;version&gt;2.12.1&lt;/version&gt;     &lt;/dependency&gt;           &lt;!--json的依赖--&gt;     &lt;dependency&gt;         &lt;groupId&gt;com.alibaba&lt;/groupId&gt;         &lt;artifactId&gt;druid-spring-boot-starter&lt;/artifactId&gt;         &lt;version&gt;1.1.10&lt;/version&gt;     &lt;/dependency&gt;  &lt;/dependencies&gt;     &lt;!-- &lt;dependency&gt;          &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;          &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;          &lt;version&gt;2.10.0&lt;/version&gt;      &lt;/dependency&gt;--&gt;      &lt;!--静态资源问题--&gt;     &lt;build&gt;         &lt;resources&gt;             &lt;resource&gt;                 &lt;directory&gt;src/main/java&lt;/directory&gt;                 &lt;includes&gt;                     &lt;include&gt;**/*.properties&lt;/include&gt;                     &lt;include&gt;**/*.xml&lt;/include&gt;                 &lt;/includes&gt;                 &lt;filtering&gt;false&lt;/filtering&gt;             &lt;/resource&gt;             &lt;resource&gt;                 &lt;directory&gt;src/main/resources&lt;/directory&gt;                 &lt;includes&gt;                     &lt;include&gt;**/*.properties&lt;/include&gt;                     &lt;include&gt;**/*.xml&lt;/include&gt;                 &lt;/includes&gt;                 &lt;filtering&gt;false&lt;/filtering&gt;             &lt;/resource&gt;         &lt;/resources&gt;     &lt;/build&gt;</code></pre> </h1> <pre><code class="language-java">package pojo;  public class books {     private int bookId;     private String bookName;     private int bookCounts;     private String detail;      public books(int bookId, String bookName, int bookCounts, String detail) {         this.bookId = bookId;         this.bookName = bookName;         this.bookCounts = bookCounts;         this.detail = detail;     }      public books() {     }      public int getBookId() {         return bookId;     }      public void setBookId(int bookId) {         this.bookId = bookId;     }      public String getBookName() {         return bookName;     }      public void setBookName(String bookName) {         this.bookName = bookName;     }      public int getBookCounts() {         return bookCounts;     }      public void setBookCounts(int bookCounts) {         this.bookCounts = bookCounts;     }      public String getDetail() {         return detail;     }      public void setDetail(String detail) {         this.detail = detail;     } } </code></pre> </h1> <p>这里暂时只有一个方法</p> <pre><code class="language-java">package Dao;  import pojo.books;  import java.util.List;  public interface BooksMapper {     List&lt;books&gt; selectbooks(); } </code></pre> </h1> <p>这个是接口配置文件</p> <pre><code class="language-XML">&lt;?xml version="1.0" encoding="UTF-8" ?&gt; &lt;!DOCTYPE mapper         PUBLIC "-//mybatis.org//DTD Config 3.0//EN"         "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt; &lt;!--把刚刚我们写的接口配置进去--&gt; &lt;mapper namespace="Dao.BooksMapper"&gt;  &lt;select id="BooksMapper" resultType="pojo.books"&gt;     select * from books &lt;/select&gt;   &lt;/mapper&gt;</code></pre> <p>mybatis核心配置文件</p> <pre><code class="language-XML">&lt;?xml version="1.0" encoding="UTF-8" ?&gt; &lt;!DOCTYPE configuration         PUBLIC "-//mybatis.org//DTD Config 3.0//EN"         "http://mybatis.org/dtd/mybatis-3-config.dtd"&gt; &lt;configuration&gt;     &lt;!--把那个接口导进来--&gt;     &lt;mappers&gt;         &lt;package name="Dao"/&gt;     &lt;/mappers&gt; &lt;/configuration&gt;</code></pre> </h1> <p>这个是spring整合Mybatis的xml文件</p> <pre><code class="language-XML">&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;beans xmlns="http://www.springframework.org/schema/beans"        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"        xmlns:context="http://www.springframework.org/schema/context"        xsi:schemaLocation="http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans.xsd        http://www.springframework.org/schema/context        https://www.springframework.org/schema/context/spring-context.xsd"&gt;      &lt;!-- 配置整合mybatis --&gt;     &lt;!-- 1.关联数据库文件 --&gt;     &lt;context:property-placeholder location="classpath:database.properties"/&gt;      &lt;!-- 2.数据库连接池 --&gt;     &lt;!--数据库连接池         dbcp 半自动化操作 不能自动连接         c3p0 自动化操作（自动的加载配置文件 并且设置到对象里面）     --&gt;     &lt;bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"&gt;         &lt;!-- 配置连接池属性 --&gt;         &lt;property name="driverClass" value="${jdbc.driver}"/&gt;         &lt;property name="jdbcUrl" value="${jdbc.url}"/&gt;         &lt;property name="user" value="${jdbc.username}"/&gt;         &lt;property name="password" value="${jdbc.password}"/&gt;          &lt;!-- c3p0连接池的私有属性 --&gt;         &lt;property name="maxPoolSize" value="30"/&gt;         &lt;property name="minPoolSize" value="10"/&gt;         &lt;!-- 关闭连接后不自动commit --&gt;         &lt;property name="autoCommitOnClose" value="false"/&gt;         &lt;!-- 获取连接超时时间 --&gt;         &lt;property name="checkoutTimeout" value="10000"/&gt;         &lt;!-- 当获取连接失败重试次数 --&gt;         &lt;property name="acquireRetryAttempts" value="2"/&gt;     &lt;/bean&gt;      &lt;!-- 3.配置SqlSessionFactory对象 --&gt;     &lt;bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"&gt;         &lt;!-- 注入数据库连接池 --&gt;         &lt;property name="dataSource" ref="dataSource"/&gt;         &lt;!-- 配置MyBaties全局配置文件:mybatis-config.xml --&gt;         &lt;property name="configLocation" value="classpath:mybatis-config.xml"/&gt;     &lt;/bean&gt;       &lt;!--解释 ：https://www.cnblogs.com/jpfss/p/7799806.html--&gt;     &lt;bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"&gt;         &lt;!-- 注入sqlSessionFactory --&gt;         &lt;property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/&gt;         &lt;!-- 4.配置扫描Dao接口包，动态实现Dao接口注入到spring容器中 --&gt;         &lt;property name="basePackage" value="Dao"/&gt;     &lt;/bean&gt;  &lt;/beans&gt;</code></pre> <p>数据库配置文件，这里你们改一下数据库就OK</p> <pre><code class="language-XML">jdbc.driver=com.mysql.jdbc.Driver jdbc.url=jdbc:mysql://localhost:3306/ssmbuild jdbc.username=root jdbc.password=root</code></pre> </h1> <p>写接口和实现类</p> <pre><code class="language-java">package Service;  import org.springframework.stereotype.Service; import pojo.books;  import java.util.List;  public interface BooksService {         List&lt;books&gt; selectbooks();     }  </code></pre> <p>实现类</p> <pre><code class="language-java"> @Service  public class BooksServicelmpl implements BooksService{    /*这里是把Dao的接口引进来了因为Service层调用Dao层*/      @Autowired     private BooksMapper booksMapper;     public void setBooksMapper(BooksMapper booksMapper) {         this.booksMapper = booksMapper;     }     @Override     public List&lt;books&gt; selectbooks() {         return booksMapper.selectbooks();     } }</code></pre> <p>写spring配置文件</p> <pre><code class="language-XML">&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;beans xmlns="http://www.springframework.org/schema/beans"        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"        xmlns:context="http://www.springframework.org/schema/context"        xsi:schemaLocation="http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd"&gt;      &lt;context:component-scan base-package="Service"/&gt;     &lt;!-- &lt;bean id="bookServicelmpl" class="service.bookServicelmpl"&gt;      &lt;property name="bookMapper" ref="bookMapper"/&gt;      &lt;/bean&gt;--&gt;     &lt;!--因为serv层要调Dao层我们把数据源拿过来，如果这里报红就是因为没有引入Dao的那个数据源--&gt;     &lt;bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"&gt;         &lt;property name="dataSource" ref="dataSource"/&gt;     &lt;/bean&gt;  &lt;/beans&gt;</code></pre> <p>关联spring配置文件，我们写个总的配置文件到进去就ok</p> <pre><code class="language-XML">&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;beans xmlns="http://www.springframework.org/schema/beans"        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"        xsi:schemaLocation="http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans.xsd"&gt;      &lt;import resource="classpath:spring-Service.xml"/&gt;     &lt;import resource="classpath:spring-Dao.xml"/&gt; &lt;/beans&gt;</code></pre> <p>7.spring整合Conteoller层</p> <pre><code class="language-XML">&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;beans xmlns="http://www.springframework.org/schema/beans"        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"        xmlns:context="http://www.springframework.org/schema/context"        xmlns:mvc="http://www.springframework.org/schema/mvc"        xsi:schemaLocation="http://www.springframework.org/schema/beans    http://www.springframework.org/schema/beans/spring-beans.xsd    http://www.springframework.org/schema/context    http://www.springframework.org/schema/context/spring-context.xsd    http://www.springframework.org/schema/mvc    https://www.springframework.org/schema/mvc/spring-mvc.xsd"&gt;      &lt;!-- 扫描web相关的bean --&gt;     &lt;context:component-scan base-package="Controller"/&gt;     &lt;!-- 1.开启SpringMVC注解驱动 --&gt;     &lt;mvc:annotation-driven/&gt;     &lt;!-- 2.静态资源默认servlet配置--&gt;     &lt;mvc:default-servlet-handler/&gt;       &lt;!-- 配置视图解析器 --&gt;     &lt;bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"&gt;         &lt;!-- 前缀 --&gt;         &lt;property name="prefix" value="/WEB-INF/jsp/"/&gt;         &lt;!-- 后缀 --&gt;         &lt;property name="suffix" value=".jsp"/&gt;     &lt;/bean&gt;      &lt;mvc:annotation-driven&gt;         &lt;mvc:message-converters register-defaults="true"&gt;             &lt;bean class="org.springframework.http.converter.StringHttpMessageConverter"&gt;                 &lt;constructor-arg value="UTF-8"/&gt;             &lt;/bean&gt;             &lt;bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"&gt;                 &lt;property name="objectMapper"&gt;                     &lt;bean class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean"&gt;                         &lt;property name="failOnEmptyBeans" value="false"/&gt;                     &lt;/bean&gt;                 &lt;/property&gt;             &lt;/bean&gt;         &lt;/mvc:message-converters&gt;     &lt;/mvc:annotation-driven&gt;   &lt;/beans&gt;</code></pre> <p>写Controller的类</p> <pre><code class="language-java">@RestController public class bookController {     @Autowired     private BooksService booksService;     public void setBooksService(BooksService booksService) {         this.booksService = booksService;     }     @RequestMapping("/books")     public List&lt;books&gt; selectbooks()     {         List&lt;books&gt; list = booksService.selectbooks();         return list;     } } </code></pre> <p>把三个配置文件关联</p> <pre><code class="language-XML">&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;beans xmlns="http://www.springframework.org/schema/beans"        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"        xsi:schemaLocation="http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans.xsd"&gt;      &lt;import resource="classpath:spring-Service.xml"/&gt;     &lt;import resource="classpath:spring-Dao.xml"/&gt;     &lt;import resource="spring-mvc.xml"/&gt; &lt;/beans&gt;</code></pre> </h1> <p style="text-align:center;"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20230217/e0866f1d43a99589e4a85a23704e5708.jpg"></p> <p style="text-align:center;">&nbsp;<img decoding="async" alt="" src="http://img.555519.xyz/uploads/20230217/63639966985ebbaf277531362285dd44.jpg"></p> <p>&nbsp;写web.xml文件里面都是死的</p> <pre><code class="language-XML">&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"          xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"          version="4.0"&gt;      &lt;!--DispatcherServlet--&gt;     &lt;servlet&gt;         &lt;servlet-name&gt;springmvc&lt;/servlet-name&gt;         &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;         &lt;init-param&gt;             &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;             &lt;!--一定要注意:我们这里加载的是总的配置文件，之前被这里坑了！--&gt;             &lt;param-value&gt;classpath:applicationContext.xml&lt;/param-value&gt;         &lt;/init-param&gt;         &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;     &lt;/servlet&gt;     &lt;servlet-mapping&gt;         &lt;servlet-name&gt;springmvc&lt;/servlet-name&gt;         &lt;url-pattern&gt;/&lt;/url-pattern&gt;     &lt;/servlet-mapping&gt;      &lt;!--乱码解决--&gt;     &lt;filter&gt;         &lt;filter-name&gt;encodingFilter&lt;/filter-name&gt;         &lt;filter-class&gt;             org.springframework.web.filter.CharacterEncodingFilter         &lt;/filter-class&gt;         &lt;init-param&gt;             &lt;param-name&gt;encoding&lt;/param-name&gt;             &lt;param-value&gt;utf-8&lt;/param-value&gt;         &lt;/init-param&gt;     &lt;/filter&gt;     &lt;filter-mapping&gt;         &lt;filter-name&gt;encodingFilter&lt;/filter-name&gt;         &lt;url-pattern&gt;/*&lt;/url-pattern&gt;     &lt;/filter-mapping&gt;      &lt;!--Session过期时间--&gt;     &lt;session-config&gt;         &lt;session-timeout&gt;15&lt;/session-timeout&gt;     &lt;/session-config&gt;  &lt;/web-app&gt;</code></pre> <p>创建一个lib包把依赖导进去</p> <p style="text-align:center;"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20230217/4d0ce1819facf199afe08f213cb7f277.jpg"></p> <p>添加工件测试</p> <p style="text-align:center;"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20230217/0fafade5b03a973cd4f215256a4dccd6.jpg"></p> </h1> <p style="text-align:center;"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20230217/5d11cbb928d9ffb958e1a8d1f33033c5.jpg"></p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-49134.htm">MySQL/InnoDB中，乐观锁、悲观锁、共享锁、排它锁、行锁、表锁、死锁概念的理解</a></p>
                                        <p>下一个：<a href="/news/article-49647.htm">成都哪里可以免费领养狗（成都哪里可以免费领养狗狗狗）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-2-23-node-share-links.htm" title="「2月23日」每天更新18M/S，SSR/Clash/V2ray/Shadowrocket/Loon免费节点订阅链接">「2月23日」每天更新18M/S，SSR/Clash/V2ray/Shadowrocket/Loon免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-29-loon-github.htm" title="「1月29日」每天更新18.5M/S，SSR/V2ray/Shadowrocket/Clash/Loon免费节点订阅链接">「1月29日」每天更新18.5M/S，SSR/V2ray/Shadowrocket/Clash/Loon免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-41207.htm" title="css文本垂直居中详解">css文本垂直居中详解</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-16-free-node-subscribe-links.htm" title="「1月16日」每天更新21.6M/S，Shadowrocket/SSR/V2ray/Clash/Loon免费节点订阅链接">「1月16日」每天更新21.6M/S，Shadowrocket/SSR/V2ray/Clash/Loon免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-41206.htm" title="MySQL 5.7的Homebrew安装 &#8211; MacOS">MySQL 5.7的Homebrew安装 &#8211; MacOS</a></li>
                        <li class="py-2"><a href="/news/article-62432.htm" title="kotlin 标准函数和静态方法 with、run、apply">kotlin 标准函数和静态方法 with、run、apply</a></li>
                        <li class="py-2"><a href="/news/article-57780.htm" title="Web前端：JavaScript和Nodejs有什么不同?">Web前端：JavaScript和Nodejs有什么不同?</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-15-free-high-speed-nodes.htm" title="「1月15日」每天更新22.5M/S，SSR/Shadowrocket/Clash/V2ray/Loon免费节点订阅链接">「1月15日」每天更新22.5M/S，SSR/Shadowrocket/Clash/V2ray/Loon免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-19-loon-github.htm" title="「1月19日」每天更新21.6M/S，V2ray/SSR/Clash/Shadowrocket/Loon免费节点订阅链接">「1月19日」每天更新21.6M/S，V2ray/SSR/Clash/Shadowrocket/Loon免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-49133.htm" title="MySQL高级 之 explain执行计划详解（*）">MySQL高级 之 explain执行计划详解（*）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">12</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
    <!-- attorney-section -->
        <!-- footer -->
    <div class="footer">
        <div class="tiny-footer">
            <div class="container">
                <div class="row ">
                    <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center ">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        <p>
                            <a href="/">Loon Node机场订阅官网</a> 版权所有 Powered by WordPress
                        </p>
                    </div>
                </div>
                <!-- /. tiny-footer -->
            </div>
        </div>
    </div>
    <!-- /.footer -->
    <a href="javascript:" id="return-to-top"><i class="fa fa-angle-up"></i></a>
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="/assets/website/js/frontend/loonnode/jquery.min.js"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="/assets/website/js/frontend/loonnode/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/loonnode/menumaker.js"></script>
    <script src="/assets/website/js/frontend/loonnode/return-to-top.js"></script>
    <script src="/assets/website/js/frontend/loonnode/sticky-header.js"></script>
    <script src="/assets/website/js/frontend/loonnode/jquery.sticky.js"></script>
    <script src="/assets/website/js/frontend/loonnode/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/loonnode/multiple-carousel.js"></script>
    <script src="/assets/website/js/frontend/loonnode/aos.js"></script>
    <script>
    AOS.init({
        easing: 'linear',
        duration: 800,
    });
    </script>
    <script>
    AOS.init({
        disable: 'mobile'
    });
    </script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>